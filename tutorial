#Обновленная версия гайда от AGx10k

#####Solana-TdS

#### меняем дефолтный порт ssh на рандом (Необязательный пункт. Обязательно запоминаем этот рандомный порт для будущих подключений по SSH!)
port=$(shuf -i 10000-65000 -n 1) && echo port=$port && read -p 
sed 's/#Port 22/Port '$port'/g' -i /etc/ssh/sshd_config && systemctl restart ssh && netstat -tanp | grep LISTEN

### дефолтные пакеты под всё подряд
apt-get -yq update && apt-get -yq install screen mc htop strace  wget curl git unzip etckeeper tmux psmisc dnsutils bc jq lynx ntp net-tools software-properties-common wget whois pciutils curl lsof vim gawk rsync sudo build-essential netcat-openbsd pv ethtool file

### sys-info scripts from hetzner
wget https://gist.githubusercontent.com/AGx10k/bebd6297c7d8a8bd856a55ad2f2393a5/raw/b42b5d9d3edc2c9be1fe36d1518f4a68eb46f2ad/hwdata.sh -O ~/hwdata.sh && chmod +x ~/hwdata.sh
wget https://gist.githubusercontent.com/AGx10k/bebd6297c7d8a8bd856a55ad2f2393a5/raw/c72fe59642c34622b8014a4888bcf9734197815c/netdata.sh -O netdata.sh && chmod +x ~/netdata.sh

echo "/root/hwdata.sh && /root/netdata.sh" >> ~/.profile

### node-exporter allow from main prometheus server only 
#iptables -I INPUT -p tcp --dport 9100 ! --source prometheus-host-ip -j DROP
#apt -yq install prometheus-node-exporter


### install latest testnet release. 
### Тут сначала узнаем актуальную версию соланы и заменяем последний параметр (v1.3.3 в следующей строке)
curl -sSf https://raw.githubusercontent.com/solana-labs/solana/v1.1.9/install/solana-install-init.sh | sh -s - v1.3.3

export PATH="/root/.local/share/solana/install/active_release/bin:$PATH"


### exclude solana-validator from rsyslog
echo 'if $programname == "solana-validator" then stop' > /etc/rsyslog.d/01-solana-remove.conf && systemctl restart rsyslog

# service file
### ВАЖНО! Данный файл может меняться со временем, уточнить актуальную версию перед запуском!

### Для Мainnet: wget https://raw.githubusercontent.com/sideEffect117/solana/master/servicemb -O /etc/systemd/system/solana.service

wget https://raw.githubusercontent.com/c29r3/solana-utils/master/solana-tds.service -O /etc/systemd/system/solana.service
chmod 0644 /etc/systemd/system/solana.service
systemctl daemon-reload
systemctl enable solana.service 

### https://docs.solana.com/running-validator/validator-monitor#timezone-for-log-messages
ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime


mkdir /root/solana
cd /root/solana

#Если переносим уже работающую ноду на другой сервер, отсюда см. конец гайда

### generate identity - это уже сделали во время подачи заявки
###solana-keygen new --outfile ./validator-keypair.json
###cat validator-keypair.json &&echo

### создаём файл с ключом, который генерировали до этого (копипастим содержимое)
touch validator-keypair.json && chmod 0600 validator-keypair.json && echo edit validator-keypair.json && sleep 5 && nano validator-keypair.json

### For Mainnet: solana config set --keypair /root/solana/validator-keypair.json

solana config set --url http://testnet.solana.com  --keypair /root/solana/validator-keypair.json

solana balance

#### 10 сек смотрим на логи и потом ctrl-c
solana-gossip spy --entrypoint testnet.solana.com:8001 



###create vote account ->>> https://docs.solana.com/running-validator/validator-start#create-vote-account
solana-keygen new -o /root/solana/vote-account-keypair.json

### делаем резервную копию
cat vote-account-keypair.json &&echo

### create account on blockchain
solana create-vote-account /root/solana/vote-account-keypair.json /root/solana/validator-keypair.json

### по результатам предыдущей команды должен быть примерно такой вывод:
#Signature: длиииииннный хэш транзакции

# проверить
solana vote-account  /root/solana/vote-account-keypair.json 

### должно быть что-то в этом роде - 3 раза должен быть показан pubkey основной
# Account Balance: 0.02685864 SOL
# Validator Identity: <YOUR_pubkey>
# Authorized Voters: {43: "<YOUR_pubkey>"}
# Authorized Withdrawer: <YOUR_pubkey>
# Credits: 0
# Commission: 100%
# Root Slot: ~
# Recent Timestamp: BlockTimestamp { slot: 0, timestamp: 0 }


systemctl start solana

#### 20 секунд смотрим на экран и потом ctrl-c
journalctl -u solana -f

### Ждем минут пять перед выполнением следующей команды
while true; do echo sleep 15 and try catchup; sleep 15; solana catchup /root/solana/validator-keypair.json ; done

# После выполнения предыдущей команды мы должны видеть, как нода синкается (пишет %n slots behind). Если вместо этого видим "RPC service not found", значит что-то не так.
Варианты решений:
1) Попробовать отредактировать файл сервиса (выполнить nano /etc/systemd/system/solana.service) и убрать оттуда две строки 
  --private-rpc \
  --rpc-bind-address localhost \
Сохранить, затем: 
systemctl daemon-reload
systemctl restart solana

Затем снова ждем минут пять и снова пробуем
solana catchup /root/solana/validator-keypair.json

2) Выполнить 
  echo vm.max_map_count=700000 >> /etc/sysctl.conf
  sysctl -p
  systemctl daemon-reload
  systemctl restart solana
  solana catchup /root/solana/validator-keypair.json
  
3) Проверить настройки фаервола на предмет нужных портов

4) Решение для тех у кого ulimit не применяется в Ubuntu через /etc/security/limits.conf:

  https://superuser.com/questions/1200539/cannot-increase-open-file-limit-past-4096-ubuntu
  1. Добавляем сюда /etc/security/limits.conf:
  * soft     nproc          1000000
  * hard     nproc          1000000
  * soft     nofile         1000000
  * hard     nofile         1000000
  root soft     nproc          1000000
  root hard     nproc          1000000
  root soft     nofile         1000000
  root hard     nofile         1000000

  2. В этих конфигах поменять DefaultLimitNOFILE=1000000
  /etc/systemd/system.conf
  /etc/systemd/user.conf

  3. Ребутаем (рабочего решения без ребута не найдено)

### Если все в порядке, едем дальше. (https://tourdesol.solanabeach.io/#/ Ищем тут себя в списке валидоторов по первым буквам кошелька)
### For Mainnet explorer: https://solanabeach.io/validators
### create stake keypair - https://docs.solana.com/running-validator/validator-stake#create-stake-keypair
solana-keygen new -o /root/solana/validator-stake-keypair.json

### бэкапим
cat validator-stake-keypair.json &&echo

### delegate Данная команда не выполнится, пока нода не засинкается. Сначала ждем синка
solana create-stake-account /root/solana/validator-stake-keypair.json 1

solana delegate-stake /root/solana/validator-stake-keypair.json /root/solana/vote-account-keypair.json 

### view your vote account:
solana vote-account /root/solana/vote-account-keypair.json

###View your stake account, the delegation preference and details of your stake:
solana stake-account /root/solana/validator-stake-keypair.json

solana validators

### publish info about validator
solana validator-info publish "<some name that will show up in explorer>" -n <keybase_username> -w "<website>"
### example:
###solana validator-info publish "Elvis Validator" -n elvis -w "https://elvis-validates.com"
###solana validator-info publish "Elvis Validator" -n elvis
###solana validator-info publish "Elvis Validator" 


### Обновление ноды:
### Проверка версии Solana - solana --version
### Если видим в выводе версию меньше актуальной, то надо обновится следующим образом (подставляя нужную версию):

solana-install init 1.3.3

### И потом перезагружаем Солану. 
### Если у вас запущено через службу то так: sudo systemctl restart solana
### Если в screen \ tmux, то просто останавливаем и запускаем снова


### Перенос ноды на другой сервер:

# Стопаем ноду на старом сервере
systemctl stop solana

# Дальше два варианта. Либо переносим файлы ключей через фтп-менеджер:
а) Например Filezilla, подключаемся с реквизитами как для ssh и копипастим файлы validator-keypair.json, validator-stake-keypair.json, vote-account-keypair.json в папку /root/solana)

б) Делаем все через командную строку и копипастим непосредственно содержимое файлов:
touch validator-keypair.json && chmod 0600 validator-keypair.json && echo edit validator-keypair.json && sleep 5 && nano validator-keypair.json
touch vote-account-keypair.json && chmod 0600 vote-account-keypair.json && echo edit vote-account-keypair.json && sleep 5 && nano vote-account-keypair.json
touch validator-stake-keypair.json && chmod 0600 validator-stake-keypair.json && echo edit validator-stake-keypair.json && sleep 5 && nano validator-stake-keypair.json

# Запускаем:
systemctl start solana

# Проверяем, синкается ли нода:
solana catchup /root/solana/validator-keypair.json

Если нет, см. пункт с решением этой проблемы выше в данном руководстве.

